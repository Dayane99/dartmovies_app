// Mocks generated by Mockito 5.4.4 from annotations
// in dart_movies_app/test/search_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i17;

import 'package:dart_movies_app/bloc/media/media_bloc.dart' as _i13;
import 'package:dart_movies_app/models/genre_movie_model.dart' as _i15;
import 'package:dart_movies_app/models/genre_series_model.dart' as _i16;
import 'package:dart_movies_app/models/media_model.dart' as _i14;
import 'package:dart_movies_app/others/service_hive.dart' as _i12;
import 'package:dart_movies_app/repositories/discover_movie_repository.dart'
    as _i2;
import 'package:dart_movies_app/repositories/genre_movie_repository.dart'
    as _i9;
import 'package:dart_movies_app/repositories/genre_series_repository.dart'
    as _i11;
import 'package:dart_movies_app/repositories/movie_details_repository.dart'
    as _i3;
import 'package:dart_movies_app/repositories/recommended_movie_repository.dart'
    as _i6;
import 'package:dart_movies_app/repositories/search_movie_repository.dart'
    as _i8;
import 'package:dart_movies_app/repositories/series_details.dart' as _i4;
import 'package:dart_movies_app/repositories/series_repository.dart' as _i10;
import 'package:dart_movies_app/repositories/trending_movie_repository.dart'
    as _i5;
import 'package:dart_movies_app/repositories/trending_people_repository.dart'
    as _i7;
import 'package:flutter_bloc/flutter_bloc.dart' as _i18;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDiscoverMovieRepository_0 extends _i1.SmartFake
    implements _i2.DiscoverMovieRepository {
  _FakeDiscoverMovieRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailsRepository_1 extends _i1.SmartFake
    implements _i3.MovieDetailsRepository {
  _FakeMovieDetailsRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSerieDetailsRepository_2 extends _i1.SmartFake
    implements _i4.SerieDetailsRepository {
  _FakeSerieDetailsRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrendingMoviesRepository_3 extends _i1.SmartFake
    implements _i5.TrendingMoviesRepository {
  _FakeTrendingMoviesRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecommendedMovieRepository_4 extends _i1.SmartFake
    implements _i6.RecommendedMovieRepository {
  _FakeRecommendedMovieRepository_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrendingPeopleRepository_5 extends _i1.SmartFake
    implements _i7.TrendingPeopleRepository {
  _FakeTrendingPeopleRepository_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearchMovieRepository_6 extends _i1.SmartFake
    implements _i8.SearchMovieRepository {
  _FakeSearchMovieRepository_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenreMovieRepository_7 extends _i1.SmartFake
    implements _i9.GenreMovieRepository {
  _FakeGenreMovieRepository_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSeriesRepository_8 extends _i1.SmartFake
    implements _i10.SeriesRepository {
  _FakeSeriesRepository_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenreSeriesRepository_9 extends _i1.SmartFake
    implements _i11.GenreSeriesRepository {
  _FakeGenreSeriesRepository_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServiceHive_10 extends _i1.SmartFake implements _i12.ServiceHive {
  _FakeServiceHive_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMediaState_11 extends _i1.SmartFake implements _i13.MediaState {
  _FakeMediaState_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MediaBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaBloc extends _i1.Mock implements _i13.MediaBloc {
  MockMediaBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DiscoverMovieRepository get movieRepository => (super.noSuchMethod(
        Invocation.getter(#movieRepository),
        returnValue: _FakeDiscoverMovieRepository_0(
          this,
          Invocation.getter(#movieRepository),
        ),
      ) as _i2.DiscoverMovieRepository);

  @override
  set movieRepository(_i2.DiscoverMovieRepository? _movieRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #movieRepository,
          _movieRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.MovieDetailsRepository get movieDetailsRepository => (super.noSuchMethod(
        Invocation.getter(#movieDetailsRepository),
        returnValue: _FakeMovieDetailsRepository_1(
          this,
          Invocation.getter(#movieDetailsRepository),
        ),
      ) as _i3.MovieDetailsRepository);

  @override
  set movieDetailsRepository(
          _i3.MovieDetailsRepository? _movieDetailsRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #movieDetailsRepository,
          _movieDetailsRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.SerieDetailsRepository get serieDetailsRepository => (super.noSuchMethod(
        Invocation.getter(#serieDetailsRepository),
        returnValue: _FakeSerieDetailsRepository_2(
          this,
          Invocation.getter(#serieDetailsRepository),
        ),
      ) as _i4.SerieDetailsRepository);

  @override
  set serieDetailsRepository(
          _i4.SerieDetailsRepository? _serieDetailsRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #serieDetailsRepository,
          _serieDetailsRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.TrendingMoviesRepository get trendingRepository => (super.noSuchMethod(
        Invocation.getter(#trendingRepository),
        returnValue: _FakeTrendingMoviesRepository_3(
          this,
          Invocation.getter(#trendingRepository),
        ),
      ) as _i5.TrendingMoviesRepository);

  @override
  set trendingRepository(_i5.TrendingMoviesRepository? _trendingRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #trendingRepository,
          _trendingRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DiscoverMovieRepository get watchContinueRepository =>
      (super.noSuchMethod(
        Invocation.getter(#watchContinueRepository),
        returnValue: _FakeDiscoverMovieRepository_0(
          this,
          Invocation.getter(#watchContinueRepository),
        ),
      ) as _i2.DiscoverMovieRepository);

  @override
  set watchContinueRepository(
          _i2.DiscoverMovieRepository? _watchContinueRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #watchContinueRepository,
          _watchContinueRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.RecommendedMovieRepository get recommendedMovieRepository =>
      (super.noSuchMethod(
        Invocation.getter(#recommendedMovieRepository),
        returnValue: _FakeRecommendedMovieRepository_4(
          this,
          Invocation.getter(#recommendedMovieRepository),
        ),
      ) as _i6.RecommendedMovieRepository);

  @override
  set recommendedMovieRepository(
          _i6.RecommendedMovieRepository? _recommendedMovieRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #recommendedMovieRepository,
          _recommendedMovieRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.TrendingPeopleRepository get trendingPeopleRepository =>
      (super.noSuchMethod(
        Invocation.getter(#trendingPeopleRepository),
        returnValue: _FakeTrendingPeopleRepository_5(
          this,
          Invocation.getter(#trendingPeopleRepository),
        ),
      ) as _i7.TrendingPeopleRepository);

  @override
  set trendingPeopleRepository(
          _i7.TrendingPeopleRepository? _trendingPeopleRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #trendingPeopleRepository,
          _trendingPeopleRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.SearchMovieRepository get searchRepository => (super.noSuchMethod(
        Invocation.getter(#searchRepository),
        returnValue: _FakeSearchMovieRepository_6(
          this,
          Invocation.getter(#searchRepository),
        ),
      ) as _i8.SearchMovieRepository);

  @override
  set searchRepository(_i8.SearchMovieRepository? _searchRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchRepository,
          _searchRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.GenreMovieRepository get genremovieRepository => (super.noSuchMethod(
        Invocation.getter(#genremovieRepository),
        returnValue: _FakeGenreMovieRepository_7(
          this,
          Invocation.getter(#genremovieRepository),
        ),
      ) as _i9.GenreMovieRepository);

  @override
  set genremovieRepository(_i9.GenreMovieRepository? _genremovieRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #genremovieRepository,
          _genremovieRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.SeriesRepository get seriesRepository => (super.noSuchMethod(
        Invocation.getter(#seriesRepository),
        returnValue: _FakeSeriesRepository_8(
          this,
          Invocation.getter(#seriesRepository),
        ),
      ) as _i10.SeriesRepository);

  @override
  set seriesRepository(_i10.SeriesRepository? _seriesRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #seriesRepository,
          _seriesRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.GenreSeriesRepository get genreseriesRepository => (super.noSuchMethod(
        Invocation.getter(#genreseriesRepository),
        returnValue: _FakeGenreSeriesRepository_9(
          this,
          Invocation.getter(#genreseriesRepository),
        ),
      ) as _i11.GenreSeriesRepository);

  @override
  set genreseriesRepository(
          _i11.GenreSeriesRepository? _genreseriesRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #genreseriesRepository,
          _genreseriesRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.ServiceHive get serviceHive => (super.noSuchMethod(
        Invocation.getter(#serviceHive),
        returnValue: _FakeServiceHive_10(
          this,
          Invocation.getter(#serviceHive),
        ),
      ) as _i12.ServiceHive);

  @override
  set serviceHive(_i12.ServiceHive? _serviceHive) => super.noSuchMethod(
        Invocation.setter(
          #serviceHive,
          _serviceHive,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i14.MovieModel> get movieList => (super.noSuchMethod(
        Invocation.getter(#movieList),
        returnValue: <_i14.MovieModel>[],
      ) as List<_i14.MovieModel>);

  @override
  set movieList(List<_i14.MovieModel>? _movieList) => super.noSuchMethod(
        Invocation.setter(
          #movieList,
          _movieList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i15.GenreMovieModelList> get genremovieList => (super.noSuchMethod(
        Invocation.getter(#genremovieList),
        returnValue: <_i15.GenreMovieModelList>[],
      ) as List<_i15.GenreMovieModelList>);

  @override
  set genremovieList(List<_i15.GenreMovieModelList>? _genremovieList) =>
      super.noSuchMethod(
        Invocation.setter(
          #genremovieList,
          _genremovieList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i16.GenreSeriesModelList> get genreseriesList => (super.noSuchMethod(
        Invocation.getter(#genreseriesList),
        returnValue: <_i16.GenreSeriesModelList>[],
      ) as List<_i16.GenreSeriesModelList>);

  @override
  set genreseriesList(List<_i16.GenreSeriesModelList>? _genreseriesList) =>
      super.noSuchMethod(
        Invocation.setter(
          #genreseriesList,
          _genreseriesList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.MediaState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeMediaState_11(
          this,
          Invocation.getter(#state),
        ),
      ) as _i13.MediaState);

  @override
  _i17.Stream<_i13.MediaState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i17.Stream<_i13.MediaState>.empty(),
      ) as _i17.Stream<_i13.MediaState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i17.Future<dynamic> favoriteMovie({required _i14.MovieModel? movieModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #favoriteMovie,
          [],
          {#movieModel: movieModel},
        ),
        returnValue: _i17.Future<dynamic>.value(),
      ) as _i17.Future<dynamic>);

  @override
  void add(_i13.MediaEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i13.MediaEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i13.MediaState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i13.MediaEvent>(
    _i18.EventHandler<E, _i13.MediaState>? handler, {
    _i18.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i18.Transition<_i13.MediaEvent, _i13.MediaState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  void onChange(_i18.Change<_i13.MediaState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
